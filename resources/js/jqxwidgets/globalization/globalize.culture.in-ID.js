/*
 * Globalize Culture en-US
 *
 * http://github.com/jquery/globalize
 *
 * Copyright Software Freedom Conservancy, Inc.
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * This file was generated by the Globalize Culture Generator
 * Translation: bugs found in this file need to be fixed in the generator
 */

(function( window, undefined ) {

var Globalize;

if ( typeof require !== "undefined" &&
	typeof exports !== "undefined" &&
	typeof module !== "undefined" ) {
	// Assume CommonJS
	Globalize = require( "globalize" );
} else {
	// Global variable
	Globalize = window.Globalize;
}

Globalize.addCultureInfo( "in-ID", "default", {
	name: "in-ID",
	englishName: "Indonesian (Indonesian)",
	calendars: {
		standard: {
			firstDay: 1,
			days: {
				names: ["Minggu","Senin","Selasa","Rabu","Kamis","Jumat","Sabtu"],
				namesAbbr: ["Mgu","Sen","Sel","Rab","Kam","Jum","Sab"],
				namesShort: ["Mg","Sn","Sl","Rb","Km","Jm","Sa"]
			},
			months: {
				names: ["januari","februari","maret","april","mei","juni","juli","agustus","september","oktober","november","desember",""],
				namesAbbr: ["jan","feb","mar","apr","mei","jun","jul","ags","sep","okt","nov","des",""]
			},
			AM: null,
			PM: null,
			eras: [{"name":"d.C.","start":null,"offset":0}],
			patterns: {
				d: "yyyy-mm-dd",
				D: "dddd d MMMM yyyy",
				t: "HH:mm",
				T: "HH:mm:ss",
				f: "dddd d MMMM yyyy HH:mm",
				F: "dddd d MMMM yyyy HH:mm:ss",
				M: "dd MMMM",
				Y: "MMMM yyyy"
			}
		}
	},
    percentsymbol: "%",
    currencysymbol: "$",
    currencysymbolposition: "before",
    decimalseparator: '.',
    thousandsseparator: ',',
    pagergotopagestring: "Go to page:",
    pagershowrowsstring: "Show rows:",
    pagerrangestring: " of ",
    pagerpreviousbuttonstring: "previous",
    pagernextbuttonstring: "next",
    groupsheaderstring: "Drag a column and drop it here to group by that column",
    sortascendingstring: "Sort Ascending",
    sortdescendingstring: "Sort Descending",
    sortremovestring: "Remove Sort",
    groupbystring: "Group By this column",
    groupremovestring: "Remove from groups",
    filterclearstring: "Clear",
    filterstring: "Filter",
    filtershowrowstring: "Show rows where:",
    filtershowrowdatestring: "Show rows where date:",
    filterorconditionstring: "Or",
    filterandconditionstring: "And",
    filterselectallstring: "(Select All)",
    filterchoosestring: "Please Choose:",
    filterstringcomparisonoperators: ['empty', 'not empty', 'contains', 'contains(match case)',
        'does not contain', 'does not contain(match case)', 'starts with', 'starts with(match case)',
        'ends with', 'ends with(match case)', 'equal', 'equal(match case)', 'null', 'not null'],
    filternumericcomparisonoperators: ['equal', 'not equal', 'less than', 'less than or equal', 'greater than', 'greater than or equal', 'null', 'not null'],
    filterdatecomparisonoperators: ['equal', 'not equal', 'less than', 'less than or equal', 'greater than', 'greater than or equal', 'null', 'not null'],
    filterbooleancomparisonoperators: ['equal', 'not equal'],
    validationstring: "Entered value is not valid",
    emptydatastring: "No data to display",
    filterselectstring: "Select Filter",
    loadtext: "Loading...",
    clearstring: "Clear",
    todaystring: "Today"  	
});

}( this ));
